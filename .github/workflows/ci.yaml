name: Build Docker Container

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Get project name from pom.xml
        id: get_project_name
        run: echo "::set-output name=artifactId::$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)"

      - name: Expose project name as an output
        run: echo "POM_PROJECT_NAME=${{ steps.get_project_name.outputs.artifactId }}" >> $GITHUB_ENV

      - name: Print project name
        run: echo $POM_PROJECT_NAME

      - name: Get version from pom.xml
        id: get_version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Print version
        run: echo $POM_VERSION

      - name: Expose version as an output
        run: echo "POM_VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Print version
        run: echo $POM_VERSION

      - name: Build with Maven
        run: mvn clean package --file pom.xml -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build --file src/main/docker/Dockerfile.jvm -t ${POM_PROJECT_NAME} .

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker tag ${POM_PROJECT_NAME} ${{ secrets.DOCKERHUB_USERNAME }}/${POM_PROJECT_NAME}:${POM_VERSION}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${POM_PROJECT_NAME}:${POM_VERSION}